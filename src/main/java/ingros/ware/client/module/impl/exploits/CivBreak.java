package ingros.ware.client.module.impl.exploits;

import ingros.ware.client.events.PacketEvent;
import ingros.ware.client.events.UpdateEvent;
import ingros.ware.client.module.Module;
import ingros.ware.client.utils.MathUtils;
import ingros.ware.client.utils.TimerUtil;
import ingros.ware.client.utils.value.impl.NumberValue;
import net.b0at.api.event.Subscribe;
import net.b0at.api.event.types.EventType;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.network.play.client.C0APacketAnimation;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;

public class CivBreak extends Module {
    private BlockPos blockPos;
    private EnumFacing enumFacing;
    private TimerUtil timer = new TimerUtil();
    private NumberValue<Integer> delay = new NumberValue<>("Delay",5,1,1000,1);
    public CivBreak() {
        super("CivBreak", Category.EXPLOITS, 0xff33ff33);
        addValues(delay);
    }

    @Subscribe
    public void onPre(UpdateEvent e) {
        if (e.getEventType() == EventType.POST || blockPos == null)
            return;
        if (getMc().thePlayer.getDistance(blockPos.getX(), blockPos.getY() + 0.5F, blockPos.getZ()) <= 6) {
            final float[] rots = getRotations(blockPos);
            e.setYaw(rots[0]);
            e.setPitch(rots[1]);
        }
        if (blockPos == null || getMc().theWorld.getBlockState(blockPos) == null)
            return;
        if (timer.reach((delay.getValue() / 2 + MathUtils.getRandom(delay.getValue() / 2))) && getMc().thePlayer.getDistance(blockPos.getX(), blockPos.getY(), blockPos.getZ()) <= 6) {
            getMc().thePlayer.sendQueue.getNetworkManager().sendPacket(new C0APacketAnimation());
            getMc().thePlayer.sendQueue.getNetworkManager().sendPacket(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK, blockPos, enumFacing));
            timer.reset();
        }
    }

    @Subscribe
    public void onPacketSend(PacketEvent e) {
        if (e.getType() == EventType.PRE) {
            if (e.getPacket() instanceof C07PacketPlayerDigging) {
                C07PacketPlayerDigging packet = (C07PacketPlayerDigging) e.getPacket();
                if (packet.getStatus() == C07PacketPlayerDigging.Action.START_DESTROY_BLOCK) {
                    if (blockPos != packet.getPosition()) {
                        blockPos = packet.getPosition();
                        enumFacing = packet.getFacing();
                    } else {
                        e.setCancelled(true);
                    }
                }
            }
        }
    }

    public float[] getRotations(BlockPos pos) {
        double x = pos.getX() - getMc().thePlayer.posX;
        double y = pos.getY() - getMc().thePlayer.posY;
        double z = pos.getZ() - getMc().thePlayer.posZ;
        y /= getMc().thePlayer.getDistance(pos.getX(), pos.getY(), pos.getZ());
        float yaw = (float) (-(Math.atan2(x, z) * 57.29577951308232));
        float pitch = (float) (-(Math.asin(y) * 57.29577951308232));
        return new float[]{yaw, pitch};
    }

    @Override
    public void onDisable() {
        super.onDisable();
        blockPos = null;
        enumFacing = null;
        timer.reset();
    }
}
